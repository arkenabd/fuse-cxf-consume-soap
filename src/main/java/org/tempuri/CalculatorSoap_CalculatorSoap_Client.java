
package org.tempuri;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7.fuse-730040-redhat-00001
 * 2020-08-06T10:35:43.211+07:00 Generated source version:
 * 3.2.7.fuse-730040-redhat-00001
 *
 */
public final class CalculatorSoap_CalculatorSoap_Client {

	private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "Calculator");
	Calculator ss = null;
	CalculatorSoap port = null;

	private CalculatorSoap_CalculatorSoap_Client() {
	}

	public void init() throws java.lang.Exception {
		URL wsdlURL = Calculator.WSDL_LOCATION;

		ss = new Calculator(wsdlURL, SERVICE_NAME);
		port = ss.getCalculatorSoap();

//		{
//			System.out.println("Invoking divide...");
//			int _divide_intA = 0;
//			int _divide_intB = 0;
//			int _divide__return = port.divide(_divide_intA, _divide_intB);
//			System.out.println("divide.result=" + _divide__return);
//
//		}
//		
//		{
//			System.out.println("Invoking multiply...");
//			int _multiply_intA = 0;
//			int _multiply_intB = 0;
//			int _multiply__return = port.multiply(_multiply_intA, _multiply_intB);
//			System.out.println("multiply.result=" + _multiply__return);
//
//		}
//
//		System.exit(0);
	}

	public int Substract(int _subtract_intA, int _subtract_intB) {
		try {
			init();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("Invoking subtract:" + _subtract_intA + " - " + _subtract_intB);
		int _subtract__return = port.subtract(_subtract_intA, _subtract_intB);
		System.out.println("subtract.result=" + _subtract__return);
		return _subtract__return;

	}

	public int Add(int _add_intA, int _add_intB) {
		try {
			init();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("Invoking add...");
		int _add__return = port.add(_add_intA, _add_intB);
		System.out.println("add.result=" + _add__return);
		return _add__return;

	}
}
